Preventing SQL Injection Using Parameterized Queries
EXAMPLE Sample test --

 example with the sqlite3 library, which uses parameterized queries to avoid SQL injection:
import sqlite3

def connect_db():
    """Connect to the database."""
    conn = sqlite3.connect('example.db')
    return conn

def safe_query(conn, user_input):
    """
    Executes a parameterized query to prevent SQL injection.
    Only retrieves data where user input matches the condition.
    """
    cursor = conn.cursor()
    query = "SELECT * FROM users WHERE username = ?"
    cursor.execute(query, (user_input,))
    results = cursor.fetchall()
    cursor.close()
    return results

# Example usage
if __name__ == "__main__":
    conn = connect_db()
    user_input = input("Enter username to search: ")  # e.g., an attacker might enter ' OR '1'='1
    results = safe_query(conn, user_input)
    print("Search results:", results)
    conn.close()

Preventing SQL Injection with SQLAlchemy ORM ---

from sqlalchemy import create_engine, Column, Integer, String
from sqlalchemy.orm import declarative_base, sessionmaker

# Define the database and table schema
Base = declarative_base()

class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    username = Column(String)
    email = Column(String)

# Set up the engine and session
engine = create_engine('sqlite:///example.db')
Session = sessionmaker(bind=engine)
session = Session()

def search_user(username):
    """Safely query for a user by username."""
    user = session.query(User).filter_by(username=username).first()
    if user:
        print(f"User found: {user.username}, Email: {user.email}")
    else:
        print("No user found with that username.")

# Example usage
if __name__ == "__main__":
    user_input = input("Enter username to search: ")
    search_user(user_input)


EXAMPLE OUTPUT --

Enter username to search: alice
Search results: [(1, 'alice', 'alice@example.com')]
Enter username to search: dave
Search results: []
Enter username to search: ' OR '1'='1
Search results: []


Output Example for SQLAlchemy ORM Example --
Enter username to search: alice
User found: alice, Email: alice@example.com
Enter username to search: dave
No user found with that username.
Enter username to search: ' OR '1'='1
No user found with that username.





